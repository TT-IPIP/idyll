I"à$<p>Google has deprecated their openid provider for Google Apps for Business. Super annoying, because the only option is to move over to their OAuth2 Google+ stuff. Here are the steps to get it going.</p>

<h3 id="gemfile">Gemfile</h3>

<p>First you need to get the requires gems into your Gemfile. In my case I am using devise with Rails 4.2beta so:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">gem</span> <span class="s1">'devise'</span><span class="p">,</span> <span class="ss">github: </span><span class="s1">'plataformatec/devise'</span>
<span class="n">gem</span> <span class="s1">'omniauth'</span>
<span class="n">gem</span> <span class="s2">"omniauth-google-oauth2"</span></code></pre></figure>

<p>We need to get omniauth going so add a route:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># /config/routes.rb</span>
<span class="c1"># ...</span>

  <span class="n">devise_for</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">controllers: </span><span class="p">{</span>
    <span class="ss">omniauth_callbacks: </span><span class="s2">"users/omniauth_callbacks"</span>
  <span class="p">}</span></code></pre></figure>

<p>Then you need to setup a the callback controller you specified above:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># /app/controllers/users/omniauth_callbacks_controller.rb</span>
<span class="c1"># ...</span>

<span class="k">class</span> <span class="nc">Users::OmniauthCallbacksController</span> <span class="o">&lt;</span> <span class="no">Devise</span><span class="o">::</span><span class="no">OmniauthCallbacksController</span>
  <span class="n">skip_before_filter</span> <span class="ss">:verify_authenticity_token</span>
  <span class="kp">include</span> <span class="no">Devise</span><span class="o">::</span><span class="no">Controllers</span><span class="o">::</span><span class="no">Rememberable</span>
  <span class="k">def</span> <span class="nf">index</span>
    <span class="n">flash</span><span class="p">[</span><span class="ss">:error</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Access denied. Please sign in with a Google Apps account from </span><span class="si">#{</span><span class="no">ENV</span><span class="p">[</span><span class="s1">'GOOGLE_APPS_DOMAIN'</span><span class="p">]</span><span class="si">}</span><span class="s2">."</span>

    <span class="n">redirect_to</span> <span class="n">root_url</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">google_oauth2</span>
    <span class="c1"># You need to implement the method below in your model (e.g. app/models/user.rb)</span>
    <span class="n">auth_info</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="nf">env</span><span class="p">[</span><span class="s2">"omniauth.auth"</span><span class="p">]</span>

    <span class="c1"># This allows you to pin login to a specific google apps domain.</span>
    <span class="c1"># In our case we wanted to restrict to our google apps domain.</span>
    <span class="k">unless</span> <span class="n">auth_info</span> <span class="o">&amp;&amp;</span> <span class="n">auth_info</span><span class="p">[</span><span class="s1">'extra'</span><span class="p">][</span><span class="s1">'raw_info'</span><span class="p">][</span><span class="s1">'hd'</span><span class="p">]</span> <span class="o">==</span> <span class="no">ENV</span><span class="p">[</span><span class="s1">'GAPPS_DOMAIN'</span><span class="p">]</span>
      <span class="n">flash</span><span class="p">[</span><span class="ss">:error</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Access denied. Please sign in with a Google Apps account from </span><span class="si">#{</span><span class="no">ENV</span><span class="p">[</span><span class="s1">'GAPPS_DOMAIN'</span><span class="p">]</span><span class="si">}</span><span class="s2">."</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">else</span>

      <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find_for_google_oauth2</span><span class="p">(</span><span class="n">auth_info</span><span class="p">,</span> <span class="n">current_user</span><span class="p">)</span>

      <span class="k">if</span> <span class="vi">@user</span><span class="p">.</span><span class="nf">persisted?</span>
        <span class="n">flash</span><span class="p">[</span><span class="ss">:notice</span><span class="p">]</span> <span class="o">=</span> <span class="no">I18n</span><span class="p">.</span><span class="nf">t</span> <span class="s2">"devise.omniauth_callbacks.success"</span><span class="p">,</span> <span class="ss">:kind</span> <span class="o">=&gt;</span> <span class="s2">"Google"</span>
        <span class="n">sign_in_and_redirect</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:event</span> <span class="o">=&gt;</span> <span class="ss">:authentication</span>
      <span class="k">else</span>
        <span class="n">session</span><span class="p">[</span><span class="s2">"devise.google_data"</span><span class="p">]</span> <span class="o">=</span> <span class="n">auth_info</span>
        <span class="n">redirect_to</span> <span class="n">new_user_registration_url</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></figure>

<p>Then we need to add the method <code class="language-plaintext highlighter-rouge">User.find_for_google_oauth2</code> to our user model:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># /app/models/user.rb</span>
<span class="c1"># ...</span>
  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_for_google_oauth2</span><span class="p">(</span><span class="n">auth</span><span class="p">,</span> <span class="n">signed_in_resource</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">where</span><span class="p">(</span><span class="ss">:email</span> <span class="o">=&gt;</span> <span class="n">auth</span><span class="p">.</span><span class="nf">info</span><span class="p">[</span><span class="s2">"email"</span><span class="p">]).</span><span class="nf">first</span>
    <span class="k">unless</span> <span class="n">user</span>
      <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span> <span class="n">provider</span><span class="ss">:auth</span><span class="p">.</span><span class="nf">provider</span><span class="p">,</span> <span class="n">uid</span><span class="ss">:auth</span><span class="p">.</span><span class="nf">uid</span><span class="p">,</span> <span class="ss">name: </span><span class="n">auth</span><span class="p">.</span><span class="nf">info</span><span class="p">.</span><span class="nf">name</span><span class="p">,</span>
        <span class="ss">username: </span><span class="n">auth</span><span class="p">.</span><span class="nf">info</span><span class="p">.</span><span class="nf">email</span><span class="p">,</span> <span class="ss">email: </span><span class="n">auth</span><span class="p">.</span><span class="nf">info</span><span class="p">.</span><span class="nf">email</span><span class="p">,</span> <span class="ss">password: </span><span class="no">SecureRandom</span><span class="p">.</span><span class="nf">base64</span><span class="p">(</span><span class="mi">24</span><span class="p">)</span> <span class="p">)</span>
      <span class="c1"># if your setup for nil passwords, you can also leave the password nil.</span>
      <span class="n">user</span><span class="p">.</span><span class="nf">save</span>
    <span class="k">end</span>
    <span class="n">user</span>
  <span class="k">end</span></code></pre></figure>

<p>The last step is to configure devise. First lets add the oauth 2 provider to our devise initializer:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># /config/initializers/devise.rb</span>
<span class="c1"># ...</span>

  <span class="n">config</span><span class="p">.</span><span class="nf">omniauth</span> <span class="ss">:google_oauth2</span><span class="p">,</span> <span class="no">ENV</span><span class="p">[</span><span class="s2">"GAPPS_ID"</span><span class="p">],</span> <span class="no">ENV</span><span class="p">[</span><span class="s2">"GAPPS_SECRET"</span><span class="p">],</span> <span class="p">{</span>
    <span class="ss">prompt: </span><span class="s1">'select_account'</span><span class="p">,</span>
    <span class="ss">scope: </span><span class="s2">"email,profile"</span>
  <span class="p">}</span></code></pre></figure>

<p>You will notice we specify <code class="language-plaintext highlighter-rouge">select_account</code> -  this is required because we need to prompt the user to pick which Google ID they will use if they are signed in with multiple ids.</p>
:ET