I"X<p>OTP25 was released a couple of weeks ago bringing JIT support to ARM (aka Apple M1). However, Distillery
does not support OTP25. And I doubt it ever will given that it’s been all but replaced by Releases.</p>

<p>Distillery had a good run. But now it’s time to move on to releases.</p>

<p>This is a guide to help migrate from Distillery to Releases for Phoenix Applications built as Docker images
running on Kubernetes with clustering provided by Libcluster.</p>

<p>(This is a specific case because you need the <code class="language-plaintext highlighter-rouge">POD_IP</code> set as part of the name in <code class="language-plaintext highlighter-rouge">vm.args</code> in order
to cluster the nodes.)</p>

<p>Here’s a quick overview of the changes:</p>

<ol>
  <li>Update <code class="language-plaintext highlighter-rouge">mix.exs</code> to remove Distillery</li>
  <li>Remove the Distillery related files</li>
  <li>Add new <code class="language-plaintext highlighter-rouge">vm.args</code> as <code class="language-plaintext highlighter-rouge">/rel/vm.args.exs</code></li>
  <li>Generate the release configuration</li>
  <li>Update your configuration to load in the ENV</li>
  <li>Update your Dockerfile</li>
</ol>

<p>Upon deploying the application you should be able to access the remote console using:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./bin/app remote
</code></pre></div></div>

<h2 id="1-update-mixexs-to-remove-distillery">1. Update <code class="language-plaintext highlighter-rouge">mix.exs</code> to remove Distillery</h2>

<p>Remove the following lines from <code class="language-plaintext highlighter-rouge">mix.exs</code>:</p>

<div class="language-elixir highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      <span class="c1"># Distillery</span>
      <span class="p">{</span><span class="ss">:distillery</span><span class="p">,</span> <span class="s2">"~&gt; 2.1"</span><span class="p">},</span>
      <span class="c1"># Config Providers</span>
      <span class="p">{</span><span class="ss">:config_tuples</span><span class="p">,</span> <span class="s2">"~&gt; 0.4"</span><span class="p">},</span>
</code></pre></div></div>

<h2 id="2-remove-the-distillery-related-files">2. Remove the Distillery related files</h2>

<p>Remove the following files and directories:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/rel/config.exs
/rel/hooks/*
/rel/plugins/*
/rel/vm.args
</code></pre></div></div>

<h2 id="3-add-new-the-old-vmargs-configuration-in-relenvsheex">3. Add new the old vm.args configuration in <code class="language-plaintext highlighter-rouge">/rel/env.sh.eex</code></h2>

<p>You can generate this file using: <code class="language-plaintext highlighter-rouge">mix release.init</code> (which is separate from the phoenix command that you 
will run in the next step).</p>

<p>The following is my <code class="language-plaintext highlighter-rouge">env.sh.eex</code> file:</p>

<div class="language-elixir highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># rel/env.sh.eex</span>
<span class="n">export</span> <span class="no">RELEASE_DISTRIBUTION</span><span class="o">=</span><span class="n">name</span>
<span class="n">export</span> <span class="no">RELEASE_NODE</span><span class="o">=</span><span class="s2">"app@${POD_IP}"</span>
<span class="n">export</span> <span class="no">RELEASE_COOKIE</span><span class="o">=</span><span class="s2">"${ERLANG_COOKIE}"</span>

</code></pre></div></div>

<p>Note that you will need to replace the app name with the name of your otp app.
And you can directly set the cookie. And <code class="language-plaintext highlighter-rouge">RELEASE_DISTRIBUTION</code> is NOT OPTIONAL.
(I messed that part up for a while and was quite confused.)</p>

<h2 id="4-generate-the-release-configuration">4. Generate the release configuration.</h2>

<p>Run <code class="language-plaintext highlighter-rouge">mix phx.gen.release</code> to generate the files needed to build the release.</p>

<p>This will generate files in <code class="language-plaintext highlighter-rouge">/rel/overlays/bin</code> needed to start the server and run migrations.</p>

<p>You will probably want to update <code class="language-plaintext highlighter-rouge">lib/wildcast/release.ex</code> to change the behaviour of the load_app function:</p>

<div class="language-elixir highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">defp</span> <span class="n">load_app</span> <span class="k">do</span>
     <span class="no">Application</span><span class="o">.</span><span class="n">ensure_all_started</span><span class="p">(</span><span class="nv">@app</span><span class="p">)</span>
   <span class="k">end</span>
</code></pre></div></div>
<p>so that you don’t have errors with <code class="language-plaintext highlighter-rouge">extra_applications</code> such as <code class="language-plaintext highlighter-rouge">ssl</code> when running the migrations.</p>

<h2 id="5-update-your-configuration-to-load-in-the-env">5. Update your configuration to load in the ENV</h2>

<p>The default config provider in Distillery allows you to load in the ENV from special strings
that are formatted like: <code class="language-plaintext highlighter-rouge">"${ENV_VAR}"</code>.</p>

<p>This are replaced with the ENV variables at runtime.</p>

<p>Instead you will need to do move ALL RUNTIME config to a file called <code class="language-plaintext highlighter-rouge">releases.exs</code> and load in the
ENV VARS using either <code class="language-plaintext highlighter-rouge">System.fetch_env!/1</code> or <code class="language-plaintext highlighter-rouge">System.get_env/2</code>.</p>

<p>Use <code class="language-plaintext highlighter-rouge">System.fetch_env!/1</code> when you want the app to crash if the proper ENV is not set.</p>

<p>Use <code class="language-plaintext highlighter-rouge">System.get_env/2</code> when you want to use a default value if the ENV is not set OR if you want to
allow <code class="language-plaintext highlighter-rouge">nil</code> for certain settings.</p>

<p>For example:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>config :app, App.Repo,
   url: System.fetch_env!("DATABASE_URL"),
   pool_size: String.to_integer(System.get_env("DATABASE_POOL_SIZE", "20"))
</code></pre></div></div>

<p>requires that <code class="language-plaintext highlighter-rouge">DATABASE_URL</code> is set in the ENV but allows <code class="language-plaintext highlighter-rouge">DATABASE_POOL_SIZE</code> to be <code class="language-plaintext highlighter-rouge">nil</code>.</p>

<h2 id="6-update-your-dockerfile">6. Update your Dockerfile</h2>

<p>Finally, update your Dockerfile to use the the OTP25 images and to trigger migrations before starting the server.</p>

<p>You can also remove <code class="language-plaintext highlighter-rouge">REPLACE_OS_VARS</code> from the dockerfile if you were setting it there.</p>

<div class="language-dockerfile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">FROM</span><span class="w"> </span><span class="s">elixir:1.13-otp-25-alpine</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="s">build</span>
.
.
.
<span class="k">RUN </span><span class="nv">MIX_ENV</span><span class="o">=</span>prod mix release
.
.
.
<span class="k">FROM</span><span class="s"> erlang:25-alpine</span>
.
.
.
<span class="k">CMD</span><span class="s"> ["sh", "-c", "/opt/app/bin/migrate &amp;&amp; /opt/app/bin/app start"]</span>
</code></pre></div></div>

:ET